"use strict";(self.webpackChunkduelink=self.webpackChunkduelink||[]).push([[2968],{2766:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"engine/daisylink","title":"Daisylink","description":"---","source":"@site/docs/engine/daisylink.mdx","sourceDirName":"engine","slug":"/engine/daisylink","permalink":"/docs/engine/daisylink","draft":false,"unlisted":false,"editUrl":"https://github.com/ghi-electronics/duelink-website/tree/dev/docs/engine/daisylink.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Interrupts","permalink":"/docs/engine/interrupt"},"next":{"title":"Stream","permalink":"/docs/engine/stream"}}');var t=s(4848),o=s(8453);const a={},d="Daisylink",r={},l=[{value:"Device Selection",id:"device-selection",level:2},{value:"Broadcast",id:"broadcast",level:2},{value:"Device Enumeration",id:"device-enumeration",level:2},{value:"Host Mode",id:"host-mode",level:2},{value:"Gateway",id:"gateway",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"daisylink",children:"Daisylink"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/uplink-downlink.png",alt:"Uplink-Downlink"})}),"\n",(0,t.jsxs)(n.p,{children:["In a DUELink setup, where there are more than one module, there will always be a connection between the Uplink and Downlink connector, creating a Daisylink. Each single module in a Daisylink is an active repeater of the signal. There will be no degradation of the signal quality. If necessary, add ",(0,t.jsx)(n.a,{href:"../catalog/accessory/power-inject",children:"Power Inject"})," to help in powering devices on its Downlink.\r\n",(0,t.jsx)(n.img,{src:"/img/daisylink.png",alt:"Daisylink"})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"device-selection",children:"Device Selection"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"./stdlib",children:"Standard Library"})," offers the ",(0,t.jsx)(n.code,{children:"Sel()"})," command to activate devices on the chain. To blink the status LED on the second device on the Daisylink chain, use ",(0,t.jsx)(n.code,{children:"Sel(2)"})," followed by ",(0,t.jsx)(n.code,{children:"StatLed(200,200,50)"}),". The LED will blink 50 times on the second module in the stream."]}),"\n",(0,t.jsxs)(n.p,{children:["Daisylinked devices on a stream are addressed from ",(0,t.jsx)(n.code,{children:"1"}),". The fourth device on the bus is selected using 'Sel(4)'."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/select.png",alt:"Select"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"broadcast",children:"Broadcast"}),"\n",(0,t.jsx)(n.p,{children:"Address zero is a special address on the chain, which indicates a broadcast selection. During a broadcast, all modules are required to process the command."}),"\n",(0,t.jsx)(n.p,{children:"In this example, we have 4 modules connected."}),"\n",(0,t.jsxs)(n.p,{children:["Sending ",(0,t.jsx)(n.code,{children:"Sel(0)"})," followed by ",(0,t.jsx)(n.code,{children:"StatLed(200,200,50)"})," will blink the status LED 50 times on each one of the four modules."]}),"\n",(0,t.jsxs)(n.p,{children:["While it is also possible to read from multiple devices, ",(0,t.jsx)(n.code,{children:'Sel(0):Print("Hi")'}),", this is not recommended as responses  comes back out-of-order."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/broadcast.png",alt:"Broadcast"})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Do not confuse the module address with ",(0,t.jsx)(n.a,{href:"../interface/i2c",children:"I2C"})," address. They are unrelated! The module address work the same no matter what ",(0,t.jsx)(n.a,{href:"../interface/intro",children:"Interface"})," is being used."]})}),"\n",(0,t.jsxs)(n.p,{children:["It is also possible to select more than one device at once, multi-select. Here is how to select devices 1, 3 and 4 ",(0,t.jsx)(n.code,{children:"Sel(1,3,4)"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/multiple-select.png",alt:"Multiple Select"})}),"\n",(0,t.jsxs)(n.p,{children:["Same as for ",(0,t.jsx)(n.code,{children:"Sel(0)"}),", reading responses in a multi-select setup is not supported."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"device-enumeration",children:"Device Enumeration"}),"\n",(0,t.jsxs)(n.p,{children:["When modules power up, they have a NULL interface, and they have no set address yet. Once an ",(0,t.jsx)(n.a,{href:"../interface/intro",children:"Interface"})," is detected, such as ",(0,t.jsx)(n.a,{href:"../interface/usb",children:"USB"}),", then the first device will set its own address to 1 and then command all Downlink devices to take a new address, 1, 2, 3, 4...etc."]}),"\n",(0,t.jsxs)(n.p,{children:["To initiate the Daisylink and enumerate the modules connected on the ",(0,t.jsx)(n.a,{href:"../interface/downlink",children:"Downlink"})," interface, a command must be sent. This very first command is only seen by the first device. An empty command (just a carriage return) can also be used."]}),"\n",(0,t.jsx)(n.p,{children:"Only smart modules receive an address. For example, both power modules in this Daisylink do not have an address."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/host-mode.png",alt:"Host Mode"})}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.code,{children:"GetAddr()"})," to read the current address. If the current address is zero, then the module has not been enumerated yet."]}),"\n",(0,t.jsxs)(n.p,{children:["There are 2 options for module to be enumerated, either by detecting an ",(0,t.jsx)(n.a,{href:"../interface/intro",children:"Interface"})," or by configuring a module in host mode as explained below."]}),"\n",(0,t.jsx)(n.p,{children:"Since devices get enumerated in order, and each module needs 1ms to 2ms to be ready, commands should not be issues to modules for 2ms for each module in the Daisylink. For example, wait for 10ms before commanding a Daisylink with 5 modules."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"host-mode",children:"Host Mode"}),"\n",(0,t.jsxs)(n.p,{children:["A host is used to command a stream of Daisylinked devices. There are several ",(0,t.jsx)(n.a,{href:"../hw/intro",children:"Supported Hardware"})," devices and many supported ",(0,t.jsx)(n.a,{href:"../language/intro",children:"Languages"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/other-micros.png",alt:"Other Micros"})}),"\n",(0,t.jsxs)(n.p,{children:["DUELink modules can also run ",(0,t.jsx)(n.a,{href:"../language/standalone",children:"Standalone"})," and can also be the host of other Daisylinked modules, connected on the ",(0,t.jsx)(n.a,{href:"../interface/downlink",children:"Downlink"})," socket."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/button-led.gif",alt:"Button Controlling LEDs"})}),"\n",(0,t.jsx)(n.p,{children:"Devices automatically receive an address, starting with 1. Note how power modules do not count. They are just power sources."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/daisylink-normal.png",alt:"Normal Addressing"})}),"\n",(0,t.jsx)(n.p,{children:"The host-module can be anywhere in the chain. Here is an example where the third module is configured as a host. Note how the host module is address 3 to its host, which is the Sparkfun micro. The other modules on its Downlink also have addresses starting at 1 but these are only visible to their host."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/daisylink-third-host.png",alt:"Third Module Host"})}),"\n",(0,t.jsx)(n.p,{children:"This host can also be anywhere else in the link, including the first device. Think of modules as always physically connected but logically separated and controlled by their own respective host."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/daisylink-first-host.png",alt:"First Module Host"})}),"\n",(0,t.jsxs)(n.p,{children:["As documented on the ",(0,t.jsx)(n.a,{href:"../interface/downlink",children:"Downlink"})," interface page, ",(0,t.jsx)(n.code,{children:"DLMode(2)"})," command is used to switch the module to host mode. This will automatically reset and re-enumerate thats host's clients."]}),"\n",(0,t.jsx)(n.p,{children:"This is what addresses look like without a DUELink host. There is however an external non-DUELink host."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/daisylink-normal.png",alt:"Normal Addressing"})}),"\n",(0,t.jsx)(n.p,{children:"Load this code on the second device, which turns it into a host. It then sends a command to it's client address 2 to blink its status LED."}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"You can only load code on the first device. To handle this example, connect device 2 directly to a PC, load the program, and then move it back to be device 2 in the stream."})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:'DLMode(2) # Switch Downlink to host mode\r\nWait(100) # This delay is more than enough for 50x modules.\r\nCmd("Sel(2)") # Select second device\r\nCmd("StatLed(200,200,50)") # Blink the LED 50 times on the selected device\n'})}),"\n",(0,t.jsx)(n.p,{children:"This is what the link would look like."}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/daisylink-host-blink.png",alt:"Blinking STAT LED from Host"})}),"\n",(0,t.jsxs)(n.p,{children:['A device in "host" mode is still listening to commands coming from Uplink, but it does not forward the commands Downlink. This allows for programming and configuring the host, from DUELink ',(0,t.jsx)(n.a,{href:"../console",children:"Console"})," for example."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"gateway",children:"Gateway"}),"\n",(0,t.jsxs)(n.p,{children:["In some cases, a specialized interface can be used to pipe data into Daisylink. For example, ",(0,t.jsx)(n.a,{href:"../catalog/accessory/wireless-hook",children:"Wireless Hook"})," opens up a gateway between Bluetooth and the connected modules. Just like in host, the module itself has its own address, however the module runs in a special mode where it is a host to the connected modules."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/daisylink-wireless-host.png",alt:"Wireless Hook Host"})}),"\n",(0,t.jsxs)(n.p,{children:["This example assumes the connection was established and only shows the connection part. The ",(0,t.jsx)(n.a,{href:"../catalog/accessory/wireless-hook",children:"Wireless Hook"})," page has the full drivers to establish the connection."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"# Assuming a wireless connection was established\r\nDLMode(3) # Switch Downlink to UART gateway mode\r\n# Now any data coming from UART will go Downlink and and data coming from Downlink will go up UART.\n"})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);