"use strict";(self.webpackChunkduelink=self.webpackChunkduelink||[]).push([[276],{9275:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"interface/downlink","title":"Downlink","description":"---","source":"@site/docs/interface/downlink.mdx","sourceDirName":"interface","slug":"/interface/downlink","permalink":"/docs/interface/downlink","draft":false,"unlisted":false,"editUrl":"https://github.com/ghi-electronics/duelink-website/tree/dev/docs/interface/downlink.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"UART (Serial)","permalink":"/docs/interface/uart"},"next":{"title":"Wireless","permalink":"/docs/interface/wireless"}}');var o=i(4848),t=i(8453);const r={},d="Downlink",l={},c=[{value:"Modes",id:"modes",level:2},{value:"non-DUELink Modules",id:"non-duelink-modules",level:2}];function a(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"downlink",children:"Downlink"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/downlink.png",alt:"Downlink"})}),"\n",(0,o.jsxs)(n.p,{children:["The Downlink connector found on every single DUELink module is used to connect to the next Uplink connector on the next module. The DUELink software magically handles the data going across the entire ",(0,o.jsx)(n.a,{href:"../engine/daisylink",children:"Daisylink"})," chain of connected modules."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/daisylink.png",alt:"Downlink"})}),"\n",(0,o.jsxs)(n.p,{children:["There will be no signal degradation along the wires as data is repeated on every Downlink connector. In cases where power is dropping after several modules, a ",(0,o.jsx)(n.a,{href:"../catalog/accessory/power-inject",children:"Power Inject"})," module can be used."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/catalog/power-inject-front.png",alt:"Power Inject"})}),"\n",(0,o.jsx)(n.p,{children:"This is not necessary in most modules as they are very low power. However, some modules, like large displays and motor drivers, do require a decent amount of power."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"modes",children:"Modes"}),"\n",(0,o.jsxs)(n.p,{children:["The Downlink connector has multiple modes of operations to give the user more control. See ",(0,o.jsx)(n.code,{children:"DLMode(mode)"})," in ",(0,o.jsx)(n.a,{href:"../engine/stdlib",children:"Standard Library"}),"."]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{children:"Mode"}),(0,o.jsx)(n.th,{children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"0"}),(0,o.jsx)(n.td,{children:"Null"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"1"}),(0,o.jsx)(n.td,{children:"Daisylink"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"2"}),(0,o.jsx)(n.td,{children:"Host"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"3"}),(0,o.jsx)(n.td,{children:"UART Gateway"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{children:"4"}),(0,o.jsx)(n.td,{children:"I2C non-DUELink"})]})]})]}),"\n",(0,o.jsxs)(n.p,{children:["On power up, the Downlink connection is Null. To initiate the ",(0,o.jsx)(n.a,{href:"../engine/daisylink",children:"Daisylink"})," and enumerate all connected modules, a command must be seen by the first module. This is true even if there is a single module. This very first command is only seen by the first device and discarded by others. We recommend using an empty command (just a carriage return) to initiate the module enumeration and addressing. Upon enumeration, Downlink is switched from Null to Daisylink mode automatically."]}),"\n",(0,o.jsxs)(n.p,{children:["The user has the option to switch to ",(0,o.jsx)(n.code,{children:"Host"})," or ",(0,o.jsx)(n.code,{children:"UART Gateway"})," modes at anytime. However, once switched to these modes, the user must only switch between these modes and never switch to any other modes. ",(0,o.jsx)(n.code,{children:"Host"})," mode is an options for ",(0,o.jsx)(n.a,{href:"../engine/daisylink",children:"Daisylink"}),". ",(0,o.jsx)(n.code,{children:"UART Gateway"})," is used in rare cases, like with ",(0,o.jsx)(n.a,{href:"../catalog/accessory/wireless-hook",children:"Wireless Hook"}),", where the ",(0,o.jsx)(n.code,{children:"UART gateway"})," mode allows the system to bridge and pipe the data from the UART interface (Bluetooth in this case) to the Downlink connector."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"non-duelink-modules",children:"non-DUELink Modules"}),"\n",(0,o.jsxs)(n.p,{children:["The main purpose of Downlink is to serve other DUELink modules. On the Uplink connector side, it is possible to use non-DUELink I2C modules in a daisychain as explained on the ",(0,o.jsx)(n.a,{href:"./i2c",children:"I2C Interface"})," page."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/qwiic-stemma-duelink.png",alt:"qwiic stemmaQT with DUElink"})}),"\n",(0,o.jsxs)(n.p,{children:["Beyond using non-DUELink modules on the Uplink connector side, the Downlink connector can be switched to I2C non-DUELink mode (mode #4). This mode will free up the Downlink connector from its normal use, giving the user access to ",(0,o.jsx)(n.code,{children:"DLI2CWr()"})," function. This will give a I2C access to the connector, see ",(0,o.jsx)(n.a,{href:"../engine/stdlib",children:"Standard Library"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/qwiic-stemma-i2c.png",alt:"DUELink STEM I2C qwiic stemmaQT"})}),"\n",(0,o.jsxs)(n.p,{children:["It is also possible to have a ",(0,o.jsx)(n.a,{href:"../engine/daisylink",children:"Daisylink"})," of DUELink modules where the last module (and only the last module) is switched to ",(0,o.jsx)(n.code,{children:"I2C non-DUELink"})," mode (mode #4). This last module can now use ",(0,o.jsx)(n.code,{children:"DLI2CWr()"})," to access those I2C non-DUELink modules."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/i2c-nonduelink.png",alt:"I2C non-DUELink"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}}}]);