"use strict";(self.webpackChunkduelink=self.webpackChunkduelink||[]).push([[4991],{8387:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"hw/beagleboard","title":"BeagleBoard","description":"---","source":"@site/docs/hw/beagleboard.mdx","sourceDirName":"hw","slug":"/hw/beagleboard","permalink":"/docs/hw/beagleboard","draft":false,"unlisted":false,"editUrl":"https://github.com/ghi-electronics/duelink-website/tree/dev/docs/hw/beagleboard.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Phone & Tablet","permalink":"/docs/hw/phone-tablet"},"next":{"title":"Beyond","permalink":"/docs/hw/beyond"}}');var s=r(4848),i=r(8453);const o={},t="BeagleBoard",l={},d=[{value:"BeaglePlay",id:"beagleplay",level:2},{value:"BeagleY-AI",id:"beagley-ai",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"beagleboard",children:"BeagleBoard"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"/img/beagleboard-logo.png",alt:"BeagleBoard"})}),"\n",(0,s.jsx)(n.p,{children:"BeagleBoard has many open-source offerings and they all work with the DUELink ecosystem."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"/img/beagleboard-family.png",alt:"BeagleBoard Family of Products"})}),"\n",(0,s.jsxs)(n.p,{children:["Any of the ",(0,s.jsx)(n.a,{href:"../language/intro",children:"Coding Language"})," options can be use on these boards. Depending on the boards, there might be an easier way to connect DUELink modules."]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"beagleplay",children:"BeaglePlay"}),"\n",(0,s.jsxs)(n.p,{children:["This board has a built in JST connector with ",(0,s.jsx)(n.a,{href:"../interface/i2c",children:"I2C"})," signals, I2C5 to be exact! Their ",(0,s.jsx)(n.a,{href:"https://docs.beagleboard.org/boards/beagleplay/demos-and-tutorials/using-qwiic.html#beagleplay-qwiic",children:"Qwicc Example"})," is a good starting point on how to access the I2C bus. Consider this as a DUELink ",(0,s.jsx)(n.a,{href:"../interface/downlink",children:"Downlink"})," socket."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"/img/beagleplay-jst.png",alt:"BeagleBoard"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"beagley-ai",children:"BeagleY-AI"}),"\n",(0,s.jsxs)(n.p,{children:["This board has a ",(0,s.jsx)(n.a,{href:"raspberry-pi",children:"Raspberry PI"})," compatible footprint/pinout. We recommend using DUELink ",(0,s.jsx)(n.a,{href:"../catalog/accessory/duepi",children:"DuePI"}),", which adds a display, a buzzer, a terminal block, and ",(0,s.jsx)(n.a,{href:"../interface/downlink",children:"Downlink"})," socket."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"/img/beagleplay-duepi.gif",alt:"BeagleBonePlay with DUEPI"})}),"\n",(0,s.jsx)(n.p,{children:"The hat uses UART for communication. Here is an example to show the system's IP address on the display."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import sys\r\nimport serial\r\nimport time\r\nimport socket\r\n\r\nfrom DUELink.DUELinkController import DUELinkController\r\n\r\ndef get_ip_address():\r\n    try:\r\n        # Get all IP addresses associated with the hostname, filtering out 127.0.0.1\r\n        ips = [ip for ip in socket.gethostbyname_ex(socket.gethostname())[2] if not ip.startswith("127.")]\r\n        if ips:\r\n            return ips[0]  # Returns the first non-loopback IP address found\r\n        else:\r\n            # If no non-loopback IP is found, try connecting to an external server to determine the IP used\r\n            s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\r\n            s.connect(("8.8.8.8", 80)) # Connect to Google\'s DNS server (doesn\'t send data, just sets up connection)\r\n            ip = s.getsockname()[0]\r\n            s.close()\r\n            return ip\r\n    except socket.error:\r\n        return None\r\n    \r\n\r\nmyip = get_ip_address()\r\n\r\n# DUELink connection\r\navailablePort = DUELinkController.GetConnectionPort()\r\nduelink = DUELinkController("/dev/ttyAMA0")  # uart port define\r\n\r\n# DUELink graphics\r\n# Show IP address on screen\r\nduelink.Graphics.Clear(1)\r\nduelink.Graphics.Text("--DUELink--", 0, 33,5)\r\nduelink.Graphics.Text("My IP:" + myip, 0, 1,20)\r\nduelink.Graphics.Show()\r\n\r\n# Beep once a second\r\nwhile True:\r\n    duelink.Sound.Beep(14,1000,100)\r\n    time.sleep(1)\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h1,{id:"other-beagles",children:"Other Beagles"}),"\n",(0,s.jsxs)(n.p,{children:["Use the ",(0,s.jsx)(n.a,{href:"../catalog/accessory/breakout",children:"Breakout"})," module to wire ",(0,s.jsx)(n.a,{href:"../interface/uart",children:"UART Interface"})," or ",(0,s.jsx)(n.a,{href:"../interface/i2c",children:"I2C Interface"}),"from any BeagleBoard. When using I2C, pull-up resistors are required. The DUELink ",(0,s.jsx)(n.a,{href:"../catalog/accessory/pullup",children:"PullUp"})," module is available if needed."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"/img/beaglebone-breakout-uart.png",alt:"BeagleBone Black Breakout UART"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"/img/beaglebone-breakout-i2c.png",alt:"BeagleBone Black Breakout I2C"})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);