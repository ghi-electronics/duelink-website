"use strict";(self.webpackChunkduelink=self.webpackChunkduelink||[]).push([[2152],{4591:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"language/makecode","title":"MakeCode","description":"---","source":"@site/docs/language/makecode.mdx","sourceDirName":"language","slug":"/language/makecode","permalink":"/docs/language/makecode","draft":false,"unlisted":false,"editUrl":"https://github.com/ghi-electronics/duelink-website/tree/dev/docs/language/makecode.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"MicroBlocks","permalink":"/docs/language/microblocks"},"next":{"title":"App Inventor","permalink":"/docs/language/app-inventor"}}');var o=i(4848),r=i(8453);const t={},l="MakeCode",a={},c=[{value:"Connections",id:"connections",level:2},{value:"Blinky",id:"blinky",level:2},{value:"Extension",id:"extension",level:2},{value:"Alternatives",id:"alternatives",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"makecode",children:"MakeCode"})}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/makecode.png",alt:"MakeCode"})}),"\n",(0,o.jsxs)(n.p,{children:["For users who enjoy block-coding, MakeCode allows ",(0,o.jsxs)(n.a,{href:"../hw/microbit",children:["micro",":bit"]})," users to utilize hundreds of DUELink modules. While MakeCode supports many boards, we will focus on ",(0,o.jsxs)(n.a,{href:"../hw/microbit",children:["micro",":bit"]}),"."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"connections",children:"Connections"}),"\n",(0,o.jsxs)(n.p,{children:["To connect micro",":bit"," to one of the many DUElink modules, you can use the ",(0,o.jsx)(n.a,{href:"../catalog/accessory/linkbit",children:"LinkBit"})," module. It extends the micro",":bit"," edge connector and adds a ",(0,o.jsx)(n.a,{href:"../interface/downlink",children:"Downlink"})," connector."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/microbit-linkbit.png",alt:"LinkBit"})}),"\n",(0,o.jsxs)(n.p,{children:["Alternately you can also use any of the boards that include an on-board JST connector like the ",(0,o.jsxs)(n.a,{href:"https://www.sparkfun.com/sparkfun-qwiic-micro-bit-breakout.html",children:["Sparkfun Qwiic micro",":bit"," Breakout"]})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/microbit-breakout.png",alt:"micro breakout"})}),"\n",(0,o.jsxs)(n.p,{children:["This board includes two JST sockets. One of them becomes a ",(0,o.jsx)(n.a,{href:"../interface/downlink",children:"Downlink"})," bringing you hundreds of DUELink module options, that connect in a ",(0,o.jsx)(n.a,{href:"../engine/daisylink",children:"Daisylink"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/microbit-sparkfun-duelink.png",alt:"Sparkfun"})}),"\n",(0,o.jsxs)(n.p,{children:["Most of these boards don't have the required pull-up resistors on the I2C bus. This might not be a problem in most cases, but we have a ",(0,o.jsx)(n.a,{href:"../catalog/accessory/pullup",children:"PullUp"})," module to solve this if there's an issue. When using our ",(0,o.jsx)(n.a,{href:"../catalog/accessory/linkbit",children:"LinkBit"})," accessory a PullUp module isn't needed."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"blinky",children:"Blinky"}),"\n",(0,o.jsxs)(n.p,{children:["Create a MakeCode project like you always did on ",(0,o.jsx)(n.a,{href:"https://makecode.microbit.org/",children:"makecode.microbit.org"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/microbit-makecode.png",alt:"micro MakeCode"})}),"\n",(0,o.jsx)(n.p,{children:"This example blinks the status LED 50 times on any Downlink module"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:'function SendCommand(str: string) {\r\n  pins.i2cWriteBuffer(0x1a, Buffer.fromUTF8(str), false);\r\n}\r\nSendCommand("statled(200,200,50)");\n'})}),"\n",(0,o.jsx)(n.p,{children:"In blocks, the code above looks like this:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/makecode-blocks.png",alt:"MakeCode Send Commands"})}),"\n",(0,o.jsx)(n.p,{children:"The LED will blink 50 times then stops!"}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"extension",children:"Extension"}),"\n",(0,o.jsx)(n.p,{children:"A DUELink extension is planned for the future. Consider the other supported alternatives below."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"alternatives",children:"Alternatives"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/microblocks.png",alt:"MicroBlocks"})}),"\n",(0,o.jsxs)(n.p,{children:["Another great block-coding option is ",(0,o.jsx)(n.a,{href:"./microblocks",children:"MicroBlocks"}),". It is fully supported, allowing micro",":bit"," to connect to DULink modules."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{src:"/img/arduino-logo.png",alt:"Arduino logo"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"../hw/arduino",children:"Arduino"})," is another great option if your board supports it."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);