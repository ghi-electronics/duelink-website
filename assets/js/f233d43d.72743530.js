"use strict";(self.webpackChunkduelink=self.webpackChunkduelink||[]).push([[6080],{9399:(n,r,e)=>{e.r(r),e.d(r,{assets:()=>o,contentTitle:()=>a,default:()=>c,frontMatter:()=>d,metadata:()=>l,toc:()=>s});const l=JSON.parse('{"id":"engine/samples/falling-bird","title":"Falling Bird","description":"---","source":"@site/docs/engine/samples/falling-bird.mdx","sourceDirName":"engine/samples","slug":"/engine/samples/falling-bird","permalink":"/docs/engine/samples/falling-bird","draft":false,"unlisted":false,"editUrl":"https://github.com/ghi-electronics/duelink-website/tree/dev/docs/engine/samples/falling-bird.mdx","tags":[],"version":"current","frontMatter":{}}');var i=e(4848),t=e(8453);const d={},a="Falling Bird",o={},s=[{value:"NeoPixel Falling Bird",id:"neopixel-falling-bird",level:2}];function x(n){const r={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",p:"p",pre:"pre",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"falling-bird",children:"Falling Bird"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.p,{children:"In this example we create 2 different versions of the same game one using a NeoPixel Matrix, and other using OLED display."}),"\n",(0,i.jsx)(r.h2,{id:"neopixel-falling-bird",children:"NeoPixel Falling Bird"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"NeoPixel Falling Bird",src:e(9924).A+"",width:"600",height:"338"})}),"\n",(0,i.jsx)(r.p,{children:"This sample creates a simple falling bird type game using a NeoPixel matrix. The objective is for the player to move to avoid random obstacles."}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-py",children:"w=16      # Width of the matrix \r\nu=4       # Player X position\r\nv=8       # Player Y position\r\nt=0       # Player tail Y offset\r\nb=15      # Wall X position\r\nh=4       # Wall height\r\ng=6       # Wall gap\r\nBtnEnable('a', 1)\r\n# Game loop\r\n@loop\r\n   NeoClear()\r\n   plyr()\r\n   wall()\r\n   coll()\r\n   NeoShow(0,256)\r\n   wait(50)\r\nGoto loop\r\n# Handle the player\r\n@plyr\r\n   if BtnDown('a')\r\n     if v>0:v=v-1:end\r\n     t=1\r\n   else\r\n   if v<15:v=v+0.5:end\r\n       t=-1\r\n   end\r\n  x=u\r\n  y=trunc(v)\r\n  pxl()\r\n  NeoSet(p, 64,0,64)\r\n  x=x-1\r\n  y=y+t\r\n  pxl()\r\n  NeoSet(p, 64,0,64)\r\nreturn\r\n# Update wall\r\n@wall\r\n  b=b-0.25\r\n  if b<=0\r\n    b=15\r\n    g=4+rnd(2)\r\n    h=2+rnd(6)\r\n  end\r\n  for i=0 to 1\r\n    x=trunc(b)+i\r\n    for y=0 to h\r\n      pxl()\r\n      NeoSet(p, 0,64,0)\r\n    next\r\n    for y=h+g to 15\r\n      pxl()\r\n      NeoSet(p, 0,64,0)\r\n    next\r\n  next\r\nreturn\r\n# Check collision\r\n@coll\r\n  i=trunc(b)\r\n  if i != u && i != u-1 :return:end\r\n  if v<=h:Goto die:end\r\n  if v>=h+g:Goto die:end\r\nreturn\r\n# Player died\r\n@die\r\n  for i=0 to 20\r\n    x=(u-2)+rnd(4)\r\n    y=(v-2)+rnd(4)\r\n    pxl()\r\n    NeoSet(p, rnd(64),0,0)\r\n    NeoShow(0,256)\r\n  next\r\n  b=15\r\nreturn\r\n# Formula for index into 16x16 NeoPixel Matrix\r\n# p=pxl(x,y)\r\n@pxl\r\n  p = x*w+(x&1)*(w-1)+(1-2*(x&1))*y\r\nreturn\n"})}),"\n",(0,i.jsx)(r.hr,{}),"\n",(0,i.jsx)(r.h1,{id:"oled-falling-bird",children:"OLED Falling Bird"}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.img,{alt:"Pulse Falling Bird",src:e(8833).A+"",width:"600",height:"338"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-py",children:"lcdconfig(1, 0x3c, 0, 128, 64, 1, 1)\r\n\r\n_u=4       # Player X position\r\n_v=8       # Player Y position\r\n_t=0       # Player tail Y offset\r\n_b=31      # Wall X position\r\n_h=4       # Wall height\r\n_g=6       # Wall gap\r\n\r\nBtnEnable(1, 1)\r\n# Game loop\r\n@loop\r\n  LcdClear(0)\r\n  plyr()\r\n  wall()\r\n  coll()\r\n  LcdShow()\r\nGoto loop\r\n\r\n# Handle the player\r\nfn plyr()\r\n  if BtnDown(1)\r\n    if _v>0:_v=_v-1:end\r\n    _t=1\r\n  else\r\n    if _v<15:_v=_v+0.5:end\r\n    _t=-1\r\n  end\r\n  _x=_u\r\n  _y=trunc(_v)\r\n  pxl(_x, _y)\r\n  _x=_x-1\r\n  _y=_y+_t\r\n  pxl(_x, _y)\r\nfend\r\n\r\n# Update wall\r\nfn wall()\r\n  _b=_b-1\r\n  if _b<=0\r\n    _b=31\r\n    _g=4+rnd(2)\r\n    _h=2+rnd(6)\r\n  end\r\n  \r\n  l = (_h+_g)\r\n  x = trunc(_b)\r\n  for i=0 to 3\r\n    s=(x*4)+i\r\n    lcdline(255, s, 0, s, _h*4)\r\n    lcdline(255, s, l*4, s, 50)\r\n  next\r\n  \r\nfend\r\n\r\n# Check collision\r\nfn coll()\r\n  if trunc(_b) != _u:return:end\r\n  if (_v > _h) && (_v < _h+_g):return:end\r\n \r\n# Player died\r\n  for _i=0 to 15\r\n    pxl((_u-2)+rnd(4), (_v-2)+rnd(4))\r\n    LcdShow()\r\n  next\r\n  _b=31\r\nfend\r\n\r\n# Plot large pixel\r\nfn pxl(x,y)\r\n  LcdPixel(255, x*4, y*3)\r\n  LcdPixel(255, x*4+1, y*3)\r\n  LcdPixel(255, x*4+2, y*3)\r\n  LcdPixel(255, x*4+3, y*3)\r\n  LcdPixel(255, x*4, y*3+1)\r\n  LcdPixel(255, x*4+1, y*3+1)\r\n  LcdPixel(255, x*4+2, y*3+1)\r\n  LcdPixel(255, x*4+3, y*3+1)\r\n  LcdPixel(255, x*4, y*3+2)\r\n  LcdPixel(255, x*4+1, y*3+2)\r\n  LcdPixel(255, x*4+2, y*3+2)\r\n  LcdPixel(255, x*4+3, y*3+2)\r\nfend\n"})})]})}function c(n={}){const{wrapper:r}={...(0,t.R)(),...n.components};return r?(0,i.jsx)(r,{...n,children:(0,i.jsx)(x,{...n})}):x(n)}},9924:(n,r,e)=>{e.d(r,{A:()=>l});const l=e.p+"assets/images/falling-bird-8c133d00d7038d012179fd074376dae2.gif"},8833:(n,r,e)=>{e.d(r,{A:()=>l});const l=e.p+"assets/images/oled-falling-bird-b50700af75067412221f07b9c9260c13.gif"}}]);