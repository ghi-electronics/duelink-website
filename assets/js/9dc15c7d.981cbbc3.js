"use strict";(self.webpackChunkduelink=self.webpackChunkduelink||[]).push([[9917],{1383:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"language/micropython","title":"MicroPython","description":"---","source":"@site/docs/language/micropython.mdx","sourceDirName":"language","slug":"/language/micropython","permalink":"/docs/language/micropython","draft":false,"unlisted":false,"editUrl":"https://github.com/ghi-electronics/duelink-website/tree/dev/docs/language/micropython.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Python","permalink":"/docs/language/python"},"next":{"title":"JavaScript","permalink":"/docs/language/javascript"}}');var t=r(4848),o=r(8453);const s={},l="MicroPython",c={},a=[{value:"Setup",id:"setup",level:2},{value:"Libraries",id:"libraries",level:2},{value:"Blinky!",id:"blinky",level:2},{value:"Daisylinking",id:"daisylinking",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"micropython",children:"MicroPython"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/micropython.png",alt:"MicroPython"})}),"\n",(0,t.jsxs)(n.p,{children:["You can use DUELink with any microcontroller that uses MicroPython by connecting a ",(0,t.jsx)(n.a,{href:"../catalog/accessory/breakout",children:"Breakout"})," module to either the I2C or UART output of the board."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/micropython-breakout.png",alt:"board with Breakout"})}),"\n",(0,t.jsxs)(n.p,{children:["MicroPython with DUELink is also fully supported on ",(0,t.jsx)(n.a,{href:"../hw/raspberry-pi",children:"Raspberry Pi"})," microcontroller-level (RP2040/RP2350) boards, such as Raspberry Pi Pico."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"../catalog/accessory/duepico",children:"DuePico"})," is the perfect ",(0,t.jsx)(n.a,{href:"../hw/raspberry-pi",children:"Raspberry Pi"})," accessory for connecting DUELink modules."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/duepico-rgbled.png",alt:"DuePico"})}),"\n",(0,t.jsxs)(n.p,{children:["We'll use ",(0,t.jsx)(n.a,{href:"https://thonny.org/",children:"Thonny"})," IDE to program the RaspberryPi Pico in MicroPython. We wil use the Pico to access DUELink modules attached to the ",(0,t.jsx)(n.a,{href:"../catalog/accessory/duepico",children:"DuePico's"})," Downlink connector."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"setup",children:"Setup"}),"\n",(0,t.jsxs)(n.p,{children:["First Make sure your board is set-up for MicroPython. Follow the steps found found at ",(0,t.jsx)(n.a,{href:"https://www.raspberrypi.com/documentation/microcontrollers/micropython.html",children:"MicroPython.org"})," to load the firmware for your specific hardware."]}),"\n",(0,t.jsxs)(n.p,{children:["Connect to the board by going to ",(0,t.jsx)(n.code,{children:"Tools/Options"})," and select the proper ",(0,t.jsx)(n.code,{children:"Interpreter"}),". In this case we'll be selecting ",(0,t.jsx)(n.code,{children:"MicroPython(Raspberry Pi Pico)"})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/thonny-connect.png",alt:"Thonny Connect"})}),"\n",(0,t.jsx)(n.p,{children:"We can test that everything is working correctly by blinking the Raspberry Pi Pico's onboard LED."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import machine\r\nimport time\r\n\r\nled = machine.Pin(25, machine.Pin.OUT)\r\n\r\nwhile True:\r\n    led.on()  \r\n    time.sleep(1) \r\n    led.off() \r\n    time.sleep(1)  \n"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"libraries",children:"Libraries"}),"\n",(0,t.jsxs)(n.p,{children:["Users have two options for loading the DUELink MicroPython library into Thonny. They can either Download the ",(0,t.jsx)(n.a,{href:"https://pypi.org/project/duelink-stdlib-mp/#files",children:"duelink-stdlib-mp"})," file found at ",(0,t.jsx)(n.code,{children:"pypi.org"})," to their computer, and ",(0,t.jsx)(n.code,{children:"Install from local file"})," found under ",(0,t.jsx)(n.code,{children:"Tools/Manage packages"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/download-mp-library.png",alt:"DUELink library from local file"})}),"\n",(0,t.jsxs)(n.p,{children:["Alternately users can type ",(0,t.jsx)(n.code,{children:"duelink-stdlib-mp"})," into the search window and ",(0,t.jsx)(n.code,{children:"Install from PyPi"})," directly."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/install-mp-library.png",alt:"DUELink library from PyPi"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"blinky",children:"Blinky!"}),"\n",(0,t.jsxs)(n.p,{children:["We can now access the complete DUELink ",(0,t.jsx)(n.a,{href:"../engine/stdlib",children:"standard library"})," from inside Thonny. We need to use ",(0,t.jsx)(n.a,{href:"../interface/uart",children:"UART Interface"})," to communicate to the modules when using Raspberry Pi Pico. Let's blink the ",(0,t.jsx)(n.code,{children:"STAT"})," led on a connected DUELink module."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-py",children:"import time\r\nimport machine\r\nimport duelink\r\n \r\nfrom duelink import transport\r\n \r\nuart = transport.UartTransportController(0)\r\ndue = duelink.DUELinkController(uart)\r\n\r\ndue.system.statled(50,50,0)\n"})}),"\n",(0,t.jsxs)(n.p,{children:["You can also use boards that already have a JST connector, like ",(0,t.jsx)(n.a,{href:"https://www.adafruit.com/product/4900",children:"Adafruit QT Py RP2040"})," or ",(0,t.jsx)(n.a,{href:"https://www.sparkfun.com/sparkfun-pro-micro-rp2350.html",children:"Sparkfun Pro Micro RP2350"}),". However note that these boards use the ",(0,t.jsx)(n.a,{href:"../interface/i2c",children:"I2C Interface"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/rp2040-rp2350.png",alt:"Other boards"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import time\r\nimport machine\r\nimport duelink\r\n \r\nfrom duelink import transport\r\nfrom machine import Pin, Timer\r\n \r\nsclPIN = machine.Pin(23)\r\nsdaPIN = machine.Pin(22)\r\n \r\ni2c = transport.I2CTransportController(sda=sdaPIN, scl=sclPIN)\r\ndue = duelink.DUELinkController(i2c)\r\n \r\ndue.system.statled(50,50,0)\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Some third-party boards are not properly equipped with the proper I2C pull up resistors. The DUEink pull-up board can be used to solve this problem. See ",(0,t.jsx)(n.a,{href:"../interface/i2c",children:"I2C Interface"})," page for more details."]})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/qtpy-pullup-button.png",alt:"QTPY with Pull-up"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"daisylinking",children:"Daisylinking"}),"\n",(0,t.jsx)(n.p,{children:"In the example below, we'll use the DuePico connected to an OLED 0.96 Display, Button, and Buzzer modules."}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["Make sure these modules are loaded with ",(0,t.jsx)(n.a,{href:"../engine/drivers",children:"Drivers"}),"."]})}),"\n",(0,t.jsxs)(n.p,{children:["Note how the DuePico itself is a module which is ",(0,t.jsx)(n.code,{children:"Device 1"}),"."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:"/img/duepico-daisylinked.png",alt:"DuePico Daisylinked"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import time\r\nimport duelink  # standard lib\r\n\r\nfrom duelink import transport\r\n\r\n# device 1 is DuePico\r\n# device 2 is OLED 96\r\n# device 3 is Button S\r\n# device 4 is Buzzer\r\n\r\nuart = transport.UartTransportController(0)\r\ndue = duelink.DUELinkController(uart)\r\n\r\ndue.Engine.Select(1)#DuePico Display\r\ndue.Graphics.Clear(0)\r\ndue.Graphics.TextS("DUELink", 1, 30, 27,2,2)\r\ndue.Graphics.Show()\r\n\r\ndue.Engine.Select(2)#OLED 96 Module\r\ndue.Graphics.Clear(0)\r\ndue.Graphics.Text("--DUELink--", 1, 30, 1)\r\ndue.Graphics.Text("Press button on", 1, 1, 21)\r\ndue.Graphics.Text("device 2 to play", 1, 1, 31)\r\ndue.Graphics.Text("sound on device 3", 1, 1, 41)\r\ndue.Graphics.Show()\r\n\r\ndue.Engine.Select(3)#Button Module\r\ndue.Button.Enable(1,1,1)\r\ndue.Engine.Select(1)#DuePico `A` Button\r\ndue.Button.Enable(20,1,2)\r\n\r\nwhile True:\r\n    due.Engine.Select(3)#Button Module    \r\n    if due.Button.Down(1):\r\n        due.Engine.Select(4)\r\n        due.Frequency.Write(7, 1000, 100, 0.5)\r\n \r\n    time.sleep(0.1)\r\n    \r\n    due.Engine.Select(1)#DuePico Module \r\n    if due.Button.Down(20):\r\n        due.Frequency.Write(11, 1000, 100, 0.5)\r\n \r\n    time.sleep(0.1)\n'})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"With DUELink we can control multiple modules of the same type, as an example we can show information on both displays, access all buttons, and both buzzers on the Daisylink."})})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);