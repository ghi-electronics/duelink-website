"use strict";(self.webpackChunkduelink=self.webpackChunkduelink||[]).push([[6854],{6964:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>a,frontMatter:()=>c,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"engine/scheduler","title":"Scheduler","description":"---","source":"@site/docs/engine/scheduler.mdx","sourceDirName":"engine","slug":"/engine/scheduler","permalink":"/docs/engine/scheduler","draft":false,"unlisted":false,"editUrl":"https://github.com/ghi-electronics/duelink-website/tree/dev/docs/engine/scheduler.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Regions","permalink":"/docs/engine/regions"},"next":{"title":"Interrupts","permalink":"/docs/engine/interrupt"}}');var s=r(4848),i=r(8453);const c={},d="Scheduler",l={},u=[];function o(e){const n={code:"code",h1:"h1",header:"header",hr:"hr",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"scheduler",children:"Scheduler"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:["DUELink Engine includes a scheduler to help execute tasks repeatedly. Use ",(0,s.jsx)(n.code,{children:"SStart"})," to start scheduling a function. The arguments are ",(0,s.jsx)(n.code,{children:"SStart(func, time, count)"}),", where 'func' is the function to schedule, ",(0,s.jsx)(n.code,{children:"time"})," is the delay between executions, and finally ",(0,s.jsx)(n.code,{children:"count"})," is for the scheduler repeat count."]}),"\n",(0,s.jsxs)(n.p,{children:["You can check the current status of a scheduler using ",(0,s.jsx)(n.code,{children:"SStat(func)"}),". The returned value shows remaining count for the scheduler."]}),"\n",(0,s.jsxs)(n.p,{children:["It is possible to to abort a schedule at any time using ",(0,s.jsx)(n.code,{children:"SAbort(func)"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-py",children:'_i = 0\r\nSStart("Blink", 100, 50)\r\n\r\nwhile 1\r\n  if (_i % 10) = 0: PrintLn("stat: ", SStat("Blink")) :_i=_i+1 :end\r\n  # If button is pressed, SAbort("Blink")\r\nwend\r\n\r\nfn Blink()\r\n  DWrite(0, _i&1)# status LED is always on pin 0\r\n  _i=_i+1\r\nfend\n'})})]})}function a(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}}}]);