"use strict";(self.webpackChunkduelink=self.webpackChunkduelink||[]).push([[4237],{1851:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>h,metadata:()=>i,toc:()=>x});const i=JSON.parse('{"id":"catalog/display/hdmi","title":"HDMI","description":"<ImageSection","source":"@site/docs/catalog/display/hdmi.mdx","sourceDirName":"catalog/display","slug":"/catalog/display/hdmi","permalink":"/docs/catalog/display/hdmi","draft":false,"unlisted":false,"editUrl":"https://github.com/ghi-electronics/duelink-website/tree/dev/docs/catalog/display/hdmi.mdx","tags":[],"version":"current","frontMatter":{"pagination_next":null,"pagination_prev":null,"hide_table_of_contents":true},"sidebar":"tutorialSidebar"}');var t=r(4848),n=r(8453),d=r(1470),l=r(9365),c=(r(6540),r(6393),r(7385)),a=r(4882);const h={pagination_next:null,pagination_prev:null,hide_table_of_contents:!0},o="HDMI",p={},x=[];function j(e){const s={a:"a",code:"code",h1:"h1",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components},{Details:r}=s;return r||function(e,s){throw new Error("Expected "+(s?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"hdmi",children:"HDMI"})}),"\n",(0,t.jsx)(c.A,{product:"hdmi",tagline:"HDMI Graphics Module"}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsxs)(d.A,{className:"unique-tabs",groupid:"catalog",queryString:"show",defaultValue:"overview",values:[{label:"Overview",value:"overview"},{label:"Drivers",value:"drivers"},{label:"Samples",value:"samples"}],children:[(0,t.jsxs)(l.A,{value:"overview",children:[(0,t.jsxs)(s.p,{children:["Add HDMI graphics to any ",(0,t.jsx)(s.a,{href:"../../hw/intro",children:"Supported Hardware"}),'. The board has its own graphics processor and memory. Your system will only need to issue simple commands to show graphics on a 90" TV screen!']}),(0,t.jsxs)(s.p,{children:["The module uses ",(0,t.jsx)(s.a,{href:"https://brtchip.com/product/bt817q/",children:"BT817Q"}),". Drawing with this module will be done via the graphics coprocessor and not the internal graphics engine."]}),(0,t.jsxs)("table",{children:[(0,t.jsxs)("td",{width:"50%",children:[(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Key features"})}),(0,t.jsxs)(s.p,{children:["\u2022 HDMI interface",(0,t.jsx)("br",{}),"\r\n\u2022 57x77mm overall dimension",(0,t.jsx)("br",{})]})]}),(0,t.jsxs)("td",{width:"50%",children:[(0,t.jsx)(s.p,{children:(0,t.jsx)(s.strong,{children:"Resources"})}),(0,t.jsxs)(s.p,{children:["\ud83d\udcc4",(0,t.jsx)(s.a,{href:"pathname:///sch/gdl-dhdmi-b.pdf",children:"Schematics"}),(0,t.jsx)("br",{}),"\r\n\ud83d\udd29",(0,t.jsx)(s.a,{href:"pathname:///3d/gdl-dhdmi-b.step",children:"3D STEP file"}),(0,t.jsx)("br",{})]})]})]})]}),(0,t.jsxs)(l.A,{value:"drivers",children:[(0,t.jsxs)(s.p,{children:["See ",(0,t.jsx)(s.a,{href:"../../engine/drivers",children:"Drivers"})," page for further details."]}),(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Function"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"Synth(i, s)"})}),(0,t.jsxs)(s.td,{children:["Synthesize a note using built in instruments at index ",(0,t.jsx)(s.code,{children:"i"})," with ",(0,t.jsx)(s.code,{children:"s"})," start."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"DLClear()"})}),(0,t.jsx)(s.td,{children:"Clear the commands."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"DLCmd(c, {...})"})}),(0,t.jsxs)(s.td,{children:["Add a drawing ",(0,t.jsx)(s.code,{children:"c"})," command with ",(0,t.jsx)(s.code,{children:"{...}"})," arguments."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"DLSwap()"})}),(0,t.jsx)(s.td,{children:"Execute the graphics commands and swap working buffers."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"DVer()"})}),(0,t.jsx)(s.td,{children:"This driver version."})]})]})]}),(0,t.jsxs)(r,{children:[(0,t.jsx)("summary",{children:"The Code!"}),(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-py",metastring:'reference title="HDMI Driver"',children:"https://github.com/ghi-electronics/duelink-website/blob/dev/static/code/drivers/displays/hdmi.txt\n"})})]})]}),(0,t.jsxs)(l.A,{value:"samples",children:[(0,t.jsxs)(s.p,{children:["Samples assumes ",(0,t.jsx)(s.a,{href:"../../engine/drivers",children:"Drivers"})," are installed."]}),(0,t.jsxs)(d.A,{values:[{label:"Script",value:"script"}],children:[(0,t.jsx)(l.A,{value:"script",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-py",metastring:'reference title="Script Sample"',children:"https://github.com/ghi-electronics/duelink-website/blob/dev/static/code/samples/script/displays/hdmi.txt\n"})})}),(0,t.jsx)(l.A,{value:"py",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-py",metastring:'reference title="Python Sample"',children:"https://github.com/ghi-electronics/duelink-website/blob/dev/static/code/samples/python/displays/hdmi.py\n"})})}),(0,t.jsx)(l.A,{value:"js",children:(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-js",metastring:'reference title="JavaScript Sample"',children:"https://github.com/ghi-electronics/duelink-website/blob/dev/static/code/samples/javascript/displays/hdmi.js\n"})})})]})]}),(0,t.jsx)(l.A,{value:"projects",children:"Coming soon!"})]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(a.A,{product:"DUELink HDMI",partnumber:"GDL-DHDMI-B",price:"$00.00"})]})}function u(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(j,{...e})}):j(e)}}}]);