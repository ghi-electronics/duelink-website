"use strict";(self.webpackChunkduelink=self.webpackChunkduelink||[]).push([[1],{1804:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"engine/samples/oled-analog-clock","title":"OLED Analog Clock","description":"---","source":"@site/docs/engine/samples/oled-analog-clock.mdx","sourceDirName":"engine/samples","slug":"/engine/samples/oled-analog-clock","permalink":"/docs/engine/samples/oled-analog-clock","draft":false,"unlisted":false,"editUrl":"https://github.com/ghi-electronics/duelink-website/tree/dev/docs/engine/samples/oled-analog-clock.mdx","tags":[],"version":"current","frontMatter":{}}');var o=r(4848),a=r(8453);const i={},l="OLED Analog Clock",c={},t=[];function d(n){const e={a:"a",code:"code",h1:"h1",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"oled-analog-clock",children:"OLED Analog Clock"})}),"\n",(0,o.jsx)(e.hr,{}),"\n",(0,o.jsx)(e.p,{children:(0,o.jsx)(e.img,{alt:"OLED Analog Clock",src:r(2875).A+"",width:"600",height:"338"})}),"\n",(0,o.jsxs)(e.p,{children:["This example demonstrates using arrays of the DUELink ",(0,o.jsx)(e.a,{href:"../scripting",children:"Scripting"})," language."]}),"\n",(0,o.jsxs)(e.ul,{children:["\n",(0,o.jsx)(e.li,{children:"Using arrays to store X,Y coordinates"}),"\n",(0,o.jsx)(e.li,{children:"Using variable as both arrays and numbers"}),"\n"]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-py",children:"# Pulse - LCD Clock\r\n\r\n# Arrays to store the X and Y coordinates of each hand of the clock\r\n# Index 0 - X\r\n# Index 1 - Y\r\ndim h[2]\r\ndim m[2]\r\ndim s[2]\r\n\r\n# Numeric variables storing the current value for each of the hands\r\nh=5\r\nm=0\r\ns=0\r\n\r\np=3.1415926\r\n\r\n@loop\r\n  LCDClear(0)\r\n  face()\r\n  time()\r\n  LCDShow()\r\n  Wait(1000)\r\nGoto loop\r\n  \r\n# Draw the clock face\r\n@face\r\n  # Draw the small dot on the clock face\r\n  for i=0 to 59\r\n    m[0]=25*cos(i*p/30):m[1]=25*sin(i*p/30)\r\n    LCDPixel(1,64+m[0],32+m[1])\r\n  next\r\n\r\n  # Draw the large dots for every hour\r\n  for i=0 to 11\r\n    m[0]=25*cos(i*p/6):m[1]=25*sin(i*p/6)\r\n    LCDCircle(1,64+m[0],32+m[1],2)\r\n  next\r\n  return\r\n\r\n# Calculate and draw the new hand positions\r\n@time\r\n  h[0]=16*cos(h*p/6):h[1]=16*sin(h*p/6)\r\n  m[0]=20*cos(m*p/30):m[1]=20*sin(m*p/30)\r\n  s[0]=25*cos(s*p/30):s[1]=25*sin(s*p/30)\r\n  if s=60:s=0:m=m+1:end\r\n  if m=60:m=0:h=h+1:end\r\n  if h=12:h=0:end\r\n  s=s+1\r\n  \r\n  LCDLine(1,64,32,64+h[0],32+h[1])\r\n  LCDLine(1,64,32,64+m[0],32+m[1])\r\n  LCDLine(1,64,32,64+s[0],32+s[1])\r\n  return\n"})})]})}function h(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(d,{...n})}):d(n)}},2875:(n,e,r)=>{r.d(e,{A:()=>s});const s=r.p+"assets/images/oled-analog-clock-ccf44909d638d5debc02c339bafcf283.gif"}}]);