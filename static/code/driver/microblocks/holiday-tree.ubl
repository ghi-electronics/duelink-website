module 'Holiday Tree'
author GHIElectronics
version 0 5 
depends Tone 
description 'DUELink Holiday Tree Library

'
variables _due_tree_array 

  spec ' ' 'due_tree_beep' 'Play beep'
  spec ' ' 'due_tree_show' 'Show led'
  spec ' ' 'due_tree_setled_id' 'Set led index _ red _ green _ blue _ brightness _ %' 'auto auto auto auto auto' 1 255 255 255 50
  spec ' ' 'due_tree_setled_all' 'Set all leds red _ green _ blue _ brightness _ %' 'auto auto auto auto auto' 255 255 255 50
  spec ' ' 'due_tree_clearled_all' 'Clear all leds'
  spec ' ' 'due_tree_initf' 'Initialize Holiday Tree'
  spec 'r' 'due_tree_button' 'Button pressed'

to 'due_tree_initf' {
    'attach buzzer to pin' 1
    '[sensors:spiSetup]' 1000000
    local 'i' 0
    _due_tree_array = (newList 112)
    comment 'Set first 4 bytes to 0x00'
    for i ('[data:range]' 1 4) {
      atPut i _due_tree_array 0
    }
    comment 'Set 26*4 bytes to 0'
    for i ('[data:range]' 5 108) {
      atPut i _due_tree_array 0
    }
    comment 'Set last 4 bytes to 255'
    for i ('[data:range]' 109 112) {
      atPut i _due_tree_array 255
    }
    for i ('[data:range]' 1 26) {
      due_tree_setled_id i 0 0 0 0
    }
}

to due_tree_beep {
  'play frequency' 1000 100
}

to due_tree_button {
  return ('[data:convertType]' (digitalReadOp 20 'down') 'boolean')
}

to due_tree_clearled_all {
  for i ('[data:range]' 1 26) {
    due_tree_setled_id i 0 0 0 0
  }
}

to due_tree_setled_all red green blue percent {
  for i ('[data:range]' 1 26) {
    due_tree_setled_id i red green blue percent
  }
}

to due_tree_setled_id index red green blue percent {
  local 'i' ((index * 4) + 0)
  local 'brightness' ('[data:convertType]' ((percent * 31) / 100) 'number')
  atPut (i + 1) _due_tree_array ((224 | brightness) & 255)
  atPut (i + 2) _due_tree_array (blue & 255)
  atPut (i + 3) _due_tree_array (green & 255)
  atPut (i + 4) _due_tree_array (red & 255)
}

to due_tree_show {
  '[sensors:spiExchange]' ('[data:asByteArray]' _due_tree_array)
}

