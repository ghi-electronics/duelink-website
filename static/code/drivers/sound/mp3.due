Alias(resp_to=2000, min_last=200, reset_to=3000, min_vol=0, max_vol=30, code_ok=0x41, code_err=0x40, code_done=0x3D, code_rdy=0x3F, last_sent = _l, busy_pin = 5, message=b2 )

##### MP3 Driver #####

fn DVer()
    return 1.0
fend

Dim b2[10] # buffer to send and read response
_l = 0 # last sent



fn Init()
    SerCfg(9600, 1024)
    DRead(busy_pin, 1) # busy pin, input pull up. Low mean busy
    _l = 0
    
    Wait(1500) # power up need 1.5 second for mp3 module initialize internally 
fend

fn SendCmd(c, a) 
    # Make sure not too short from last sent
    while ((TickMs() - last_sent) < min_last)
        Wait(1)
    wend
    
    message = [ 0x7E, 0xFF, 0x06, c, 0x01, (a >> 8) & 0xFF, a & 0xFF, 0x00, 0x00, 0xEF ]
    
    s = 0
    
    for i = 1 to 7
        s = s - message[i]
    next
    
    message[7] =  (s >> 8) & 0xFF
	message[8] =  s & 0xFF
	
	SerWrs(message)
	
	while (SerB2r() < 10)
	wend
	
	b = WResponse(resp_to, code_ok, -1)
	last_sent = TickMs()
	
	return b
fend

fn WResponse(t, c, a) 
    s = TickMs()
    
    message = [ 0x7E, 0xFF, 06, c, 0, 0, 0, 0, 0, 0xEF ]
    
    i = 0
    b = 0

    while (TickMs() - s < t)
        if (SerB2r() > 0)
            b = SerRd()
            if (b >= 0) 
                if message[i] = 0 || b = message[i]
                    i = i + 1
                else
                    i = 0
                end
                
                if (i = 10)
                    return 1
                end
                
            end
        end
        Wait(1)
        # check trigger pin no
    wend
    
    return 0
fend

fn Stop() 
    return SendCmd(0x16, 0)
fend

fn SetVol(v)
    return SendCmd(0x06, v)
fend

fn IsBusy()
    return !DRead(busy_pin, 1)
fend

fn Loop(r) # r: repeat
    return SendCmd(0x19, !r)
fend

fn Rst()
    if SendCmd(0x0C, 0)
        return WResponse(reset_to, code_rdy, -1)
    end
    return 0
fend

fn PlayFile(f, d)
    if (d = 0)
        return SendCmd(0x03, f)
    else
        return SendCmd(0x0f, (d << 8) | f)
    end
fend

Init()

####################