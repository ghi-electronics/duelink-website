module 'DUELink.FileSystem'
author 'GHI Elelctronics'
version 0 8 
depends 'http://www.duelink.com/code/libraries/microblocks/microblocks-lib/duelink.ubl'
description 'DUELink FileSystem Library'

  spec 'r' 'due_fsmount' 'Mount type _ chip select pin _ speed _ max handles _' 'auto auto auto auto' 1 17 8000 4
  spec 'r' 'due_fusnmount' 'Unmount'
  spec 'r' 'due_fsformat' 'Format type _ chip select pin _ speed _' 'auto auto auto' 1 17 8000
  spec 'r' 'due_fsclose' 'Close handle _' 'auto' 1
  spec 'r' 'due_fswrite' 'Write handle _ data _' 'auto auto' 1 '1,2,3'
  spec 'r' 'due_fsread' 'Read handle _ count _' 'auto auto' 1 3
  spec 'r' 'due_fssync' 'Sync handle _' 'auto' 1
  spec 'r' 'due_fsseek' 'Seek handle _ from _' 'auto auto' 1 0
  spec 'r' 'due_fstell' 'Tell handle _' 'auto' 1
  spec 'r' 'due_fsopen' 'Open handle path _ mode _' 'auto num' '"/duelink.txt"' 10
  spec 'r' 'due_fsdelete' 'Delete file path _' 'auto' '"/duelink.txt"'
  spec 'r' 'due_fsfind' 'Find file path _' 'auto' '"/duelink.txt"'
  spec 'r' 'due_fsfile' 'File size path _' 'auto' '"/duelink.txt"'
  spec 'r' 'Open file' 'Open file _ for read' 'auto' '"/duelink.txt"'
  spec 'r' 'Open file p' 'Open file  _ for write' 'auto' '"/duelink.txt"'

to 'Open file' path {
  return ('[data:convertType]' (due_runWithResult ('_due_templateWith' 'FsOpen(%,1)' path)) 'number')
}

to 'Open file p' path {
  return ('[data:convertType]' (due_runWithResult ('_due_templateWith' 'FsOpen(%,10)' path)) 'number')
}

to due_fsclose handle {
  return ('[data:convertType]' (due_runWithResult ('_due_templateWith' 'FsClose(%)' handle)) 'number')
}

to due_fsdelete path {
  return ('[data:convertType]' (due_runWithResult ('_due_templateWith' 'FsDel(%)' path)) 'number')
}

to due_fsfile path {
  return ('[data:convertType]' (due_runWithResult ('_due_templateWith' 'fsfsz(%)' path)) 'number')
}

to due_fsfind path {
  return ('[data:convertType]' (due_runWithResult ('_due_templateWith' 'FsFind(%)' path)) 'number')
}

to due_fsformat type cs speed {
  return ('[data:convertType]' (due_runWithResult ('_due_templateWith' 'FsFmt(%,%,%)' type cs speed)) 'number')
}

to due_fsmount type cs speed handles {
  return ('[data:convertType]' (due_runWithResult ('_due_templateWith' 'FsMnt(%,%,%,%)' type cs speed handles)) 'number')
}

to due_fsopen path mode {
  return ('[data:convertType]' (due_runWithResult ('_due_templateWith' 'FsOpen(%,%)' path mode)) 'number')
}

to due_fsread handle count {
  due_run ('_due_templateWith' 'dim b9[%]' count)
  due_run ('_due_templateWith' 'FsRead(%,b9)' handle)
  return ('[data:convertType]' ('Stream read bytes' 'b9' count) 'number')
}

to due_fsseek handle offset {
  return ('[data:convertType]' (due_runWithResult ('_due_templateWith' 'FsSeek(%,%)' handle offset)) 'number')
}

to due_fssync handle {
  return ('[data:convertType]' (due_runWithResult ('_due_templateWith' 'FsSync(%)' handle)) 'number')
}

to due_fstell handle {
  return ('[data:convertType]' (due_runWithResult ('_due_templateWith' 'FsTell(%)' handle)) 'number')
}

to due_fswrite handle data {
  return ('[data:convertType]' (due_runWithResult ('_due_templateWith' 'FsWrite(%,[%])' handle data)) 'number')
}

to due_fusnmount {
  return ('[data:convertType]' (due_runWithResult 'FsUnMnt()') 'number')
}

